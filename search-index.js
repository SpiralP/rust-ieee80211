var searchIndex={};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["i8"]],["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i64"]],["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["f64"],["result",["f64"]]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u64"]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u128"]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u64"]]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u128"]]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i64"]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i128"]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[],["f32"]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[],["f64"]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i64"],["usize"]]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i128"],["usize"]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[["f32"]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[["f64"]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,[[],["u16"]]],[11,"read_u32","","",3,[[],["u32"]]],[11,"read_u64","","",3,[[],["u64"]]],[11,"read_u128","","",3,[[],["u128"]]],[11,"read_uint","","",3,[[["usize"]],["u64"]]],[11,"read_uint128","","",3,[[["usize"]],["u128"]]],[11,"write_u16","","",3,[[["u16"]]]],[11,"write_u32","","",3,[[["u32"]]]],[11,"write_u64","","",3,[[["u64"]]]],[11,"write_u128","","",3,[[["u128"]]]],[11,"write_uint","","",3,[[["usize"],["u64"]]]],[11,"write_uint128","","",3,[[["usize"],["u128"]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16"]]],[11,"read_u32","","",4,[[],["u32"]]],[11,"read_u64","","",4,[[],["u64"]]],[11,"read_u128","","",4,[[],["u128"]]],[11,"read_uint","","",4,[[["usize"]],["u64"]]],[11,"read_uint128","","",4,[[["usize"]],["u128"]]],[11,"write_u16","","",4,[[["u16"]]]],[11,"write_u32","","",4,[[["u32"]]]],[11,"write_u64","","",4,[[["u64"]]]],[11,"write_u128","","",4,[[["u128"]]]],[11,"write_uint","","",4,[[["usize"],["u64"]]]],[11,"write_uint128","","",4,[[["usize"],["u128"]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["bigendian"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["bigendian"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["bigendian"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["i8"]],["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i64"]],["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["f64"],["result",["f64"]]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"] = {"doc":"Provides abstractions for working with bytes.","i":[[3,"BytesMut","bytes","A unique reference to a contiguous slice of memory.",null,null],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[0,"buf","","Utilities for working with buffers.",null,null],[3,"IoSliceMut","bytes::buf","A buffer type used for `readv`.",null,null],[3,"IntoIter","","Iterator over the bytes contained by the buffer.",null,null],[0,"ext","","Extra utilities for `Buf` and `BufMut` types.",null,null],[3,"Limit","bytes::buf::ext","A `BufMut` adapter which limits the amount of bytes that…",null,null],[3,"Take","","A `Buf` adapter which limits the bytes read from an…",null,null],[3,"Chain","","A `Chain` sequences two buffers.",null,null],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner…",null,null],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the…",null,null],[11,"new","","Creates a new `Chain` sequencing the provided values.",0,[[["u"],["t"]],["chain"]]],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",0,[[["self"]],["t"]]],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",0,[[["self"]],["t"]]],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",0,[[["self"]],["u"]]],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",0,[[["self"]],["u"]]],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",0,[[]]],[11,"into_inner","","Consumes this `Limit`, returning the underlying value.",1,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",1,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",1,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be written",1,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be written.",1,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",2,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",2,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",2,[[],["b"]]],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",3,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",3,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",3,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be read.",3,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be read.",3,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",4,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",4,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",4,[[],["b"]]],[8,"BufExt","","Extra methods for implementations of `Buf`.",null,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",5,[[["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",5,[[["buf"]],[["chain"],["buf"]]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",5,[[],["reader"]]],[8,"BufMutExt","","Extra methods for implementations of `BufMut`.",null,null],[11,"limit","","Creates an adaptor which can write at most `limit` bytes…",6,[[["usize"]],["limit"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",6,[[],["writer"]]],[11,"chain_mut","","Creates an adapter which will chain this buffer with…",6,[[["bufmut"]],[["bufmut"],["chain"]]]],[11,"new","bytes::buf","Creates an iterator over the bytes contained by the buffer.",7,[[["t"]],["intoiter"]]],[11,"into_inner","","Consumes this `IntoIter`, returning the underlying value.",7,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",7,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",7,[[["self"]],["t"]]],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position…",8,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",8,[[["self"]]]],[11,"bytes_vectored","","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[10,"advance","","Advance the internal cursor of the Buf",8,[[["self"],["usize"]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[8,"BufMut","","A trait for values that provide sequential write access to…",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",9,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,[[["self"],["usize"]]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut…",9,[[["self"]]]],[11,"bytes_vectored_mut","","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"with_capacity","bytes","Creates a new `BytesMut` with the specified capacity.",10,[[["usize"]],["bytesmut"]]],[11,"new","","Creates a new `BytesMut` with default capacity.",10,[[],["bytesmut"]]],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",10,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",10,[[["self"]],["bool"]]],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold…",10,[[["self"]],["usize"]]],[11,"freeze","","Converts `self` into an immutable `Bytes`.",10,[[],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytesmut"]]],[11,"split","","Removes the bytes from the current view, returning them in…",10,[[["self"]],["bytesmut"]]],[11,"split_to","","Splits the buffer into two at the given index.",10,[[["self"],["usize"]],["bytesmut"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",10,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",10,[[["self"]]]],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",10,[[["self"],["usize"],["u8"]]]],[11,"set_len","","Sets the length of the buffer.",10,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",10,[[["self"],["usize"]]]],[11,"extend_from_slice","","Appends given bytes to this `BytesMut`.",10,[[["self"]]]],[11,"unsplit","","Absorbs a `BytesMut` that was previously split off.",10,[[["self"],["bytesmut"]]]],[11,"new","","Creates a new empty `Bytes`.",11,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",11,[[],["bytes"]]],[11,"len","","Returns the number of bytes contained in this `Bytes`.",11,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",11,[[["self"]],["bool"]]],[11,"copy_from_slice","","Creates `Bytes` instance from slice, by copying it.",11,[[],["self"]]],[11,"slice","","Returns a slice of self for the provided range.",11,[[["self"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",11,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",11,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",11,[[["self"]]]],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position…",8,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",8,[[["self"]]]],[11,"bytes_vectored","bytes::buf","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[10,"advance","bytes","Advance the internal cursor of the Buf",8,[[["self"],["usize"]]]],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[8,"BufMut","bytes","A trait for values that provide sequential write access to…",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",9,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,[[["self"],["usize"]]]],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut…",9,[[["self"]]]],[11,"bytes_vectored_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"from","bytes","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"from","bytes::buf","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","bytes::buf::ext","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"remaining","","",0,[[["self"]],["usize"]]],[11,"bytes","","",0,[[["self"]]]],[11,"advance","","",0,[[["self"],["usize"]]]],[11,"bytes_vectored","","",0,[[["self"]],["usize"]]],[11,"remaining","","",3,[[["self"]],["usize"]]],[11,"bytes","","",3,[[["self"]]]],[11,"advance","","",3,[[["self"],["usize"]]]],[11,"remaining","bytes","",10,[[["self"]],["usize"]]],[11,"bytes","","",10,[[["self"]]]],[11,"advance","","",10,[[["self"],["usize"]]]],[11,"to_bytes","","",10,[[["self"]],["bytes"]]],[11,"remaining","","",11,[[["self"]],["usize"]]],[11,"bytes","","",11,[[["self"]]]],[11,"advance","","",11,[[["self"],["usize"]]]],[11,"to_bytes","","",11,[[["self"]],["bytes"]]],[11,"remaining_mut","bytes::buf::ext","",0,[[["self"]],["usize"]]],[11,"bytes_mut","","",0,[[["self"]]]],[11,"advance_mut","","",0,[[["self"],["usize"]]]],[11,"bytes_vectored_mut","","",0,[[["self"]],["usize"]]],[11,"remaining_mut","","",1,[[["self"]],["usize"]]],[11,"bytes_mut","","",1,[[["self"]]]],[11,"advance_mut","","",1,[[["self"],["usize"]]]],[11,"remaining_mut","bytes","",10,[[["self"]],["usize"]]],[11,"advance_mut","","",10,[[["self"],["usize"]]]],[11,"bytes_mut","","",10,[[["self"]]]],[11,"put","","",10,[[["self"],["buf"]]]],[11,"put_slice","","",10,[[["self"]]]],[11,"deref","","",10,[[["self"]]]],[11,"deref","","",11,[[["self"]]]],[11,"deref_mut","","",10,[[["self"]]]],[11,"from","bytes::buf","",12,[[],["ioslicemut"]]],[11,"from","","",12,[[],["ioslicemut"]]],[11,"from","bytes","",10,[[],["bytesmut"]]],[11,"from","","",10,[[["str"]],["bytesmut"]]],[11,"from","","",11,[[["bytesmut"]],["bytes"]]],[11,"from","","",11,[[],["bytes"]]],[11,"from","","",11,[[["str"]],["bytes"]]],[11,"from","","",11,[[["vec",["u8"]],["u8"]],["bytes"]]],[11,"from","","",11,[[["string"]],["bytes"]]],[11,"fmt","bytes::buf","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","bytes::buf::ext","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","bytes::buf","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","bytes","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"eq","","",10,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",10,[[["self"]],["bool"]]],[11,"eq","","",10,[[["str"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["vec"]],["bool"]]],[11,"eq","","",10,[[["self"],["string"]],["bool"]]],[11,"eq","","",10,[[["t"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",10,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"]],["bool"]]],[11,"eq","","",11,[[["str"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["vec"]],["bool"]]],[11,"eq","","",11,[[["self"],["string"]],["bool"]]],[11,"eq","","",11,[[["t"],["self"]],["bool"]]],[11,"cmp","","",10,[[["self"],["bytesmut"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["bytes"]],["ordering"]]],[11,"partial_cmp","","",10,[[["self"],["bytesmut"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["string"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["bytes"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["string"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"next","bytes::buf","",7,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"extend","bytes","",10,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"from_iter","","",10,[[["intoiterator"]],["self"]]],[11,"from_iter","","",10,[[["intoiterator"]],["self"]]],[11,"from_iter","","",11,[[["intoiterator"]],["self"]]],[11,"into_iter","bytes::buf::ext","",0,[[]]],[11,"into_iter","bytes","",10,[[]]],[11,"into_iter","","",11,[[]]],[11,"write_str","","",10,[[["str"],["self"]],["result"]]],[11,"write_fmt","","",10,[[["self"],["arguments"]],["result"]]],[11,"as_ref","","",10,[[["self"]]]],[11,"as_ref","","",11,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["bytesmut"]]],[11,"clone","","",11,[[["self"]],["bytes"]]],[11,"default","","",10,[[],["bytesmut"]]],[11,"default","","",11,[[],["bytes"]]],[11,"borrow","","",10,[[["self"]]]],[11,"borrow","","",11,[[["self"]]]],[11,"borrow_mut","","",10,[[["self"]]]],[11,"fill_buf","bytes::buf::ext","",2,[[["self"]],["result"]]],[11,"consume","","",2,[[["self"],["usize"]]]],[11,"read","","",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"bytes_vectored","bytes::buf","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[11,"bytes_vectored_mut","","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]]],"p":[[3,"Chain"],[3,"Limit"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"BufExt"],[8,"BufMutExt"],[3,"IntoIter"],[8,"Buf"],[8,"BufMut"],[3,"BytesMut"],[3,"Bytes"],[3,"IoSliceMut"]]};
searchIndex["eui48"] = {"doc":"Represent and parse IEEE EUI-48 Media Access Control…","i":[[3,"MacAddress","eui48","A MAC address (EUI-48)",null,null],[4,"MacAddressFormat","","Format to display MacAddress",null,null],[13,"Canonical","","Use - notaion",0,null],[13,"HexString","","Use : notation",0,null],[13,"DotNotation","","Use . notation",0,null],[13,"Hexadecimal","","Use 0x notation",0,null],[4,"ParseError","","Parsing errors",null,null],[13,"InvalidLength","","Length is incorrect (should be 14 or 17)",1,null],[13,"InvalidCharacter","","Character not [0-9a-fA-F]|'x'|'-'|':'|'.'",1,null],[6,"Eui48","","",null,null],[6,"Eui64","","",null,null],[17,"EUI48LEN","","A 48-bit (6 byte) buffer containing the EUI address",null,null],[17,"EUI64LEN","","A 64-bit (8 byte) buffer containing the EUI address",null,null],[11,"new","","Create a new MacAddress from `[u8; 6]`.",2,[[["eui48"]],["macaddress"]]],[11,"from_bytes","","Create a new MacAddress from a byte slice.",2,[[],["result"]]],[11,"nil","","Returns empty EUI-48 address",2,[[],["macaddress"]]],[11,"broadcast","","Returns 'ff:ff:ff:ff:ff:ff', a MAC broadcast address",2,[[],["macaddress"]]],[11,"is_nil","","Returns true if the address is '00:00:00:00:00:00'",2,[[["self"]],["bool"]]],[11,"is_broadcast","","Returns true if the address is 'ff:ff:ff:ff:ff:ff'",2,[[["self"]],["bool"]]],[11,"is_unicast","","Returns true if bit 1 of Y is 0 in address…",2,[[["self"]],["bool"]]],[11,"is_multicast","","Returns true if bit 1 of Y is 1 in address…",2,[[["self"]],["bool"]]],[11,"is_universal","","Returns true if bit 2 of Y is 0 in address…",2,[[["self"]],["bool"]]],[11,"is_local","","Returns true if bit 2 of Y is 1 in address…",2,[[["self"]],["bool"]]],[11,"to_canonical","","Returns a String representation in the format…",2,[[["self"]],["string"]]],[11,"to_hex_string","","Returns a String representation in the format…",2,[[["self"]],["string"]]],[11,"to_dot_string","","Returns a String representation in the format…",2,[[["self"]],["string"]]],[11,"to_hexadecimal","","Returns a String representation in the format…",2,[[["self"]],["string"]]],[11,"to_interfaceid","","Returns a String representation in the EUI-64 interface ID…",2,[[["self"]],["string"]]],[11,"to_link_local","","Returns a String representation in the IPv6 link local…",2,[[["self"]],["string"]]],[11,"to_string","","Returns a String in the format selected by fmt",2,[[["self"],["macaddressformat"]],["string"]]],[11,"parse_str","","Parses a String representation from any format supported",2,[[["str"]],[["macaddress"],["parseerror"],["result",["macaddress","parseerror"]]]]],[11,"as_bytes","","Return the internal structure as a slice of bytes",2,[[["self"]]]],[11,"to_array","","Returns an array in Eui48. Works as an inverse function of…",2,[[["self"]],["eui48"]]],[11,"get_display_format","","Returns Display MacAddressFormat, determined at compile…",2,[[],["macaddressformat"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["macaddress"]]],[11,"clone","","",0,[[["self"]],["macaddressformat"]]],[11,"clone","","",1,[[["self"]],["parseerror"]]],[11,"default","","Create a Default MacAddress (00-00-00-00-00-00)",2,[[],["macaddress"]]],[11,"cmp","","",2,[[["macaddress"],["self"]],["ordering"]]],[11,"cmp","","",0,[[["macaddressformat"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["parseerror"]],["ordering"]]],[11,"eq","","",2,[[["macaddress"],["self"]],["bool"]]],[11,"ne","","",2,[[["macaddress"],["self"]],["bool"]]],[11,"eq","","",0,[[["macaddressformat"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"partial_cmp","","",2,[[["macaddress"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["macaddress"],["self"]],["bool"]]],[11,"le","","",2,[[["macaddress"],["self"]],["bool"]]],[11,"gt","","",2,[[["macaddress"],["self"]],["bool"]]],[11,"ge","","",2,[[["macaddress"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["macaddressformat"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",1,[[["self"],["parseerror"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"le","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Debug format for MacAddress is HexString notation",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Display format is canonical format (00-00-00-00-00-00)",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Human readable error strings for ParseError enum",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"from_str","","Create a MacAddress from String",2,[[["str"]],[["macaddress"],["parseerror"],["result",["macaddress","parseerror"]]]]],[11,"description","","Human readable description for ParseError enum",1,[[["self"]],["str"]]],[11,"encode","","Encode a MacAddress as canonical form",2,[[["self"],["e"]],["result"]]],[11,"decode","","Decode a MacAddress from a string in canonical form",2,[[["d"]],[["macaddress"],["result",["macaddress"]]]]]],"p":[[4,"MacAddressFormat"],[4,"ParseError"],[3,"MacAddress"]]};
searchIndex["ieee80211"] = {"doc":"","i":[[3,"MacAddress","ieee80211","A MAC address (EUI-48)",null,null],[3,"ControlFrame","","",null,null],[3,"DataFrameBuilder","","",null,null],[3,"DataFrame","","",null,null],[3,"FrameBuilder","","",null,null],[3,"Frame","","",null,null],[3,"AssociationRequestFrame","","",null,null],[3,"AssociationResponseFrame","","",null,null],[3,"AuthenticationFrame","","",null,null],[3,"CapabilitiesInfo","","",null,null],[12,"ess_capabilities","","0: Transmitter is a STA 1: Transmitter is an AP",0,null],[12,"ibss_status","","0: Transmitter belongs to a BSS 1: Transmitter belongs to…",0,null],[12,"cfp_partitipation_capabilities","","",0,null],[12,"privacy","","0: AP/STA cannot support WEP 1: AP/STA can support WEP",0,null],[12,"short_preamble","","0: Not Allowed",0,null],[12,"pbcc","","0: Not Allowed",0,null],[12,"channel_agility","","0: Not in use",0,null],[12,"spectrum_management","","0: Not Implemented",0,null],[12,"short_slot_time","","1: In use",0,null],[12,"automatic_power_save_delivery","","0: Not Implemented",0,null],[12,"radio_measurement","","0: Not Implemented",0,null],[12,"dsss_ofdm","","0: Not Implemented",0,null],[12,"delayed_block_ack","","0: Not Implemented",0,null],[12,"immediate_block_ack","","0: Not Implemented",0,null],[3,"BeaconFrame","","",null,null],[3,"ManagementFrameBuilder","","",null,null],[3,"DeauthenticationFrameBuilder","","",null,null],[3,"DeauthenticationFrame","","",null,null],[3,"DisassociateFrameBuilder","","",null,null],[3,"DisassociateFrame","","",null,null],[3,"ProbeRequestFrame","","",null,null],[3,"ProbeResponseFrame","","",null,null],[3,"TaggedParameters","","",null,null],[3,"RSNCapabilities","","",null,null],[12,"pre_auth","","0: RSN Pre-Auth capabilities: Transmitter does not support…",1,null],[12,"pairwise","","0: RSN No Pairwise capabilities: Transmitter can support…",1,null],[12,"ptksa_replay_counter_value","","",1,null],[12,"gtksa_replay_counter_value","","",1,null],[12,"management_frame_protection_required","","Management Frame Protection Required",1,null],[12,"management_frame_protection_capable","","Management Frame Protection Capable",1,null],[12,"joint_multi_band_rsna","","Joint Multi-band RSNA",1,null],[12,"peerkey","","PeerKey Enabled",1,null],[3,"RSN","","",null,null],[12,"group_cipher_suite","","",2,null],[12,"pairwise_cipher_suites","","",2,null],[12,"akm_suites","","",2,null],[12,"capabilities","","",2,null],[3,"OverflowError","","",null,null],[3,"ManagementFrame","","",null,null],[4,"FrameLayer","","",null,null],[13,"Management","","",3,null],[13,"Control","","",3,null],[13,"Data","","",3,null],[4,"AuthenticationAlgorithm","","",null,null],[13,"OpenSystem","","",4,null],[13,"SharedKey","","",4,null],[13,"FastBSSTransition","","",4,null],[13,"SAE","","",4,null],[13,"FILSSharedKeyWithoutPFS","","",4,null],[13,"FILSSharedKeyWithPFS","","",4,null],[13,"FILSPublicKey","","",4,null],[13,"NetworkEAP","","",4,null],[13,"Reserved","","",4,null],[4,"RSNVersion","","",null,null],[13,"Standard","","",5,null],[13,"Reserved","","",5,null],[4,"CipherSuite","","",null,null],[13,"Standard","","",6,null],[13,"Vendor","","",6,null],[4,"CipherSuiteType","","",null,null],[13,"UseGroupCipherSuite","","",7,null],[13,"WEP40","","",7,null],[13,"TKIP","","",7,null],[13,"Reserved","","",7,null],[13,"CCMP","","",7,null],[13,"WEP104","","",7,null],[13,"BIP","","",7,null],[13,"GroupAddressedTrafficNotAllowed","","",7,null],[4,"AKMSuite","","",null,null],[13,"Standard","","",8,null],[13,"Vendor","","",8,null],[4,"AKMSuiteType","","Authentication and Key Management Suite",null,null],[13,"Reserved","","",9,null],[13,"IEEE802_1X","","IEEE 802.1X with RSNA default",9,null],[13,"PSK","","Pre-Shared-Key",9,null],[13,"FTOver802_1X","","FT auth negotiated over IEEE 802.1X",9,null],[13,"FTPSK","","FT auth using PSK",9,null],[13,"IEEE802_1XSHA","","IEEE 802.1X with SHA256 Key Derivation",9,null],[13,"PSKSHA","","PSK with SHA256 Key Derivation",9,null],[13,"TDLS","","TPK Handshake",9,null],[13,"SAE","","SAE with SHA256",9,null],[13,"FTOverSAE","","FT auth over SAE with SHA256",9,null],[4,"TagName","","",null,null],[13,"Other","","",10,null],[13,"SSID","","",10,null],[13,"SupportedRates","","",10,null],[13,"DSParameter","","",10,null],[13,"TrafficIndicationMap","","",10,null],[13,"CountryInformation","","",10,null],[13,"ERPInformation","","",10,null],[13,"ExtendedSupportedRates","","",10,null],[13,"RSNInformation","","",10,null],[13,"QBSSLoadElement","","",10,null],[13,"HTCapabilities","","",10,null],[13,"HTInformation","","",10,null],[13,"ExtendedCapabilities","","",10,null],[4,"ManagementFrameLayer","","",null,null],[13,"Beacon","","",11,null],[13,"ProbeRequest","","",11,null],[13,"ProbeResponse","","",11,null],[13,"Authentication","","",11,null],[13,"Deauthentication","","",11,null],[13,"Disassociate","","",11,null],[13,"AssociationRequest","","",11,null],[13,"AssociationResponse","","",11,null],[4,"DSStatus","","",null,null],[13,"NotLeavingDSOrADHOC","","Not leaving DS or network is operating in AD-HOC mode",12,null],[13,"FromDSToSTA","","Frame from DS to a STA via AP",12,null],[13,"FromSTAToDS","","Frame from STA to DS via an AP",12,null],[13,"WDSOrMesh","","WDS (AP to AP) or Mesh (MP to MP) Frame",12,null],[4,"DurationID","","",null,null],[13,"Duration","","Microseconds",13,null],[13,"AssociationID","","Association Identifier (AID) valid range 1-2007",13,null],[13,"Reserved","","",13,null],[4,"FrameVersion","","",null,null],[13,"Standard","","",14,null],[13,"Reserved","","",14,null],[4,"FrameType","","",null,null],[13,"Management","","0",15,null],[13,"Control","","1",15,null],[13,"Data","","2",15,null],[13,"Reserved","","",15,null],[4,"FrameSubtype","","",null,null],[13,"Management","","",16,null],[13,"Control","","",16,null],[13,"Data","","",16,null],[13,"Reserved","","main type, subtype",16,null],[4,"ManagementSubtype","","",null,null],[13,"AssociationRequest","","Association Request",17,null],[13,"AssociationResponse","","Association Response",17,null],[13,"ReassociationRequest","","Reassociation Request",17,null],[13,"ReassociationResponse","","Reassociation Response",17,null],[13,"ProbeRequest","","Probe Request",17,null],[13,"ProbeResponse","","Probe Response",17,null],[13,"Reserved","","6-7, 15 Reserved",17,null],[13,"Beacon","","Beacon",17,null],[13,"ATIM","","Announcement Traffic Indication Message",17,null],[13,"Disassociate","","Disassociate",17,null],[13,"Authentication","","Authentication",17,null],[13,"Deauthentication","","Deauthentication",17,null],[13,"Action","","Action",17,null],[13,"ActionNoAck","","Action No Ack",17,null],[4,"ControlSubtype","","",null,null],[13,"Reserved","","0-6 Reserved",18,null],[13,"ControlWrapper","","Control Wrapper",18,null],[13,"BlockAckRequest","","Block Ack Request",18,null],[13,"BlockAck","","Block Ack",18,null],[13,"PSPoll","","Power Save Poll",18,null],[13,"RTS","","Request To Send",18,null],[13,"CTS","","Clear To Send",18,null],[13,"Ack","","Acknowledgement",18,null],[13,"CFEnd","","Contention-Free-End",18,null],[13,"CFEndCFAck","","CF-End + CF-Ack",18,null],[4,"DataSubtype","","",null,null],[13,"Data","","Data",19,null],[13,"DataCFAck","","Data + CF-Ack",19,null],[13,"DataCFPoll","","Data + CF-Poll",19,null],[13,"DataCFAckCFPoll","","Data + CF-Ack + CF-Poll",19,null],[13,"Null","","Null function (no data)",19,null],[13,"CFAck","","CF-Ack (no data)",19,null],[13,"CFPoll","","CF-Poll (no data)",19,null],[13,"CFAckCFPoll","","CF-Ack + CF-Poll (no data)",19,null],[13,"QoSData","","QoS Data",19,null],[13,"QoSDataCFAck","","Qos Data + CF-Ack",19,null],[13,"QoSDataCFPoll","","QoS Data + CF-Poll",19,null],[13,"QoSDataCFAckCFPoll","","QoS Data + CF-Ack + CF-Poll",19,null],[13,"QoSNull","","QoS Null (no data)",19,null],[13,"Reserved","","13 Reserved",19,null],[13,"QoSCFPoll","","QoS CF-Poll (no data)",19,null],[13,"QoSCFAck","","QoS CF-Ack + CF-Poll (no data)",19,null],[4,"StatusCode","","",null,null],[13,"Successful","","0 Successful",20,null],[13,"UnspecifiedFailure","","1 Unspecified failure",20,null],[13,"TDLSWakeupScheduleRejectedButAlternativeScheduleProvided","","2 TDLS wakeup schedule rejected but alternative schedule…",20,null],[13,"TDLSWakeupScheduleRejected","","3 TDLS wakeup schedule rejected",20,null],[13,"SecurityDisabled","","4 Reserved 5 Security disabled",20,null],[13,"UnacceptableLifetime","","6 Unacceptable lifetime",20,null],[13,"NotInSameBSS","","7 Not in same BSS",20,null],[13,"CannotSupportAllRequestedCapabilities","","8 Reserved 9 Reserved 10 Cannot support all requested…",20,null],[13,"ReassociationDenied","","11 Reassociation denied due to inability to confirm that…",20,null],[13,"AssociationDenied","","12 Association denied due to reason outside the scope of…",20,null],[13,"STADoesNotSupportTheSpecifiedAuthenticationAlgorithm","","13 Responding STA does not support the specified…",20,null],[13,"ReceivedBadAuthenticationFrame","","14 Received an Authentication frame with authentication…",20,null],[13,"AuthenticationRejectedBecauseOfChallengeFailure","","15 Authentication rejected because of challenge failure",20,null],[13,"AuthenticationRejectedDueToTimeoutWaitingForNextFrameInSequence","","16 Authentication rejected due to timeout waiting for next…",20,null],[13,"AssociationDeniedBecauseAPIsUnableToHandleAdditionalAssociatedSTAs","","17 Association denied because AP is unable to handle…",20,null],[13,"AssociationDeniedDataRates","","18 Association denied due to requesting STA not supporting…",20,null],[13,"AssociationDeniedShortPreamble","","19 Association denied due to requesting STA not supporting…",20,null],[13,"AssociationDeniedPBCCModulation","","20 Association denied due to requesting STA not supporting…",20,null],[13,"AssociationDeniedChannelAgility","","21 Association denied due to requesting STA not supporting…",20,null],[13,"AssociationRequestRejectedSpectrumManagement","","22 Association request rejected because Spectrum…",20,null],[13,"AssociationRequestRejectedPowerCapability","","23 Association request rejected because the information in…",20,null],[13,"AssociationRequestRejectedSupportedChannels","","24 Association request rejected because the information in…",20,null],[13,"AssociationDeniedDueToRequestingSTANotSupportingTheShortSlotTimeOption","","25 Association denied due to requesting STA not supporting…",20,null],[13,"AssociationDeniedDueToRequestingSTANotSupportingTheDSSSOFDMOption","","26 Association denied due to requesting STA not supporting…",20,null],[13,"ReservedAssociationDeniedBecauseTheRequestingSTADoesNotSupportHTFeatures","","27 Reserved Association denied because the requesting STA…",20,null],[13,"R0KHUnreachable","","28 R0KH unreachable",20,null],[13,"AssociationDeniedPhasedCoexistence","","29 Association denied because the requesting STA does not…",20,null],[13,"AssociationRequestRejectedTemporarily","","30 Association request rejected temporarily; try again later",20,null],[13,"RobustManagementFramePolicyViolation","","31 Robust Management frame policy violation",20,null],[13,"UnspecifiedQoSRelatedFailure","","32 Unspecified, QoS-related failure",20,null],[13,"AssociationDeniedBecauseInsufficientBandwidth","","33 Association denied because QoS AP or PCP has…",20,null],[13,"AssociationDeniedExcessiveFrameLoss","","34 Association denied due to excessive frame loss rates…",20,null],[13,"AssociationWithQoSBSSDenied","","35 Association (with QoS BSS) denied because the…",20,null],[13,"TheRequestHasBeenDeclined","","36 Reserved 37 The request has been declined",20,null],[13,"TheRequestHasNotBeenSuccessfulAsOneOrMoreParametersHaveInvalidValues","","38 The request has not been successful as one or more…",20,null],[13,"TheAllocationOrTSHasNotBeenCreated","","39 The allocation or TS has not been created because the…",20,null],[13,"InvalidInformationElement","","40 Invalid information element, i.e., an information…",20,null],[13,"InvalidGroupCipher","","41 Invalid group cipher",20,null],[13,"InvalidPairwiseCipher","","42 Invalid pairwise cipher",20,null],[13,"InvalidAKMP","","43 Invalid AKMP",20,null],[13,"UnsupportedRSNInformationElementVersion","","44 Unsupported RSN information element version",20,null],[13,"InvalidRSNInformationElementCapabilities","","45 Invalid RSN information element capabilities",20,null],[13,"CipherSuiteRejectedBecauseOfSecurityPolicy","","46 Cipher suite rejected because of security policy",20,null],[13,"TheTSPerAllocationHasNotBeenCreated","","47 The TS per allocation has not been created; however,…",20,null],[13,"DirectLinkIsNotAllowedInTheBSSByPolicy","","48 Direct link is not allowed in the BSS by policy",20,null],[13,"TheDestinationSTAIsNotPresentWithinThisBSS","","49 The Destination STA is not present within this BSS",20,null],[13,"TheDestinationSTAIsNotAQoSSTA","","50 The Destination STA is not a QoS STA",20,null],[13,"AssociationDeniedBecauseTheListenIntervalIsTooLarge","","51 Association denied because the ListenInterval is too…",20,null],[13,"InvalidFTActionFrameCount","","52 Invalid FT Action frame count",20,null],[13,"InvalidPairwiseMasterKeyIdentifier","","53 Invalid pairwise master key identifier (PMKID)",20,null],[13,"InvalidMDIE","","54 Invalid MDIE",20,null],[13,"InvalidFTIE","","55 Invalid FTIE",20,null],[13,"RequestedTCLASProcessingIsNotSupportedByThePCPOrAP","","56 Requested TCLAS processing is not supported by the PCP/AP",20,null],[13,"ThePCPOrAPHasInsufficientTCLASProcessingResourcesToSatisfyTheRequest","","57 The PCP/AP has insufficient TCLAS processing resources…",20,null],[13,"TheTSHasNotBeenCreatedBecauseTheRequestCannotBeHonored","","58 The TS has not been created because the request cannot…",20,null],[13,"GASAdvertisementProtocolNotSupported","","59 GAS Advertisement Protocol not supported",20,null],[13,"NoOutstandingGASRequest","","60 No outstanding GAS request",20,null],[13,"GASResponseNotReceivedFromTheAdvertisementServer","","61 GAS Response not received from the Advertisement Server",20,null],[13,"STATimedOutWaitingForGASQueryResponse","","62 STA timed out waiting for GAS Query Response",20,null],[13,"GASResponseIsLargerThanQueryResponseLengthLimit","","63 GAS Response is larger than query response length limit",20,null],[13,"RequestRefusedBecauseHomeNetworkDoesNotSupportRequest","","64 Request refused because home network does not support…",20,null],[13,"AdvertisementServerInTheNetworkIsNotCurrentlyReachable","","65 Advertisement Server in the network is not currently…",20,null],[13,"RequestRefusedDueToPermissionsReceivedViaSSPNInterface","","66 Reserved 67 Request refused due to permissions received…",20,null],[13,"RequestRefusedBecausePCPOrAPDoesNotSupportUnauthenticatedAccess","","68 Request refused because PCP/AP does not support…",20,null],[13,"InvalidContentsOfRSNIE","","69 Reserved 70 Reserved 71 Reserved 72 Invalid contents of…",20,null],[13,"UAPSDCoexistenceIsNotSupported","","73 U-APSD Coexistence is not supported",20,null],[13,"RequestedUAPSDCoexistenceModeIsNotSupported","","74 Requested U-APSD Coexistence mode is not supported",20,null],[13,"RequestedIntervalDurationValueCannotBeSupportedWithUAPSDCoexistence","","75 Requested Interval/Duration value cannot be supported…",20,null],[13,"AuthenticationIsRejectedBecauseAnAntiCloggingTokenIsRequired","","76 Authentication is rejected because an Anti-Clogging…",20,null],[13,"AuthenticationIsRejectedBecauseTheOfferedFiniteCyclicGroupIsNotSupported","","77 Authentication is rejected because the offered finite…",20,null],[13,"TheTBTTAdjustmentRequestHasNotBeenSuccessful","","78 The TBTT adjustment request has not been successful…",20,null],[13,"TransmissionFailure","","79 Transmission failure",20,null],[13,"RequestedTCLASNotSupported","","80 Requested TCLAS Not Supported",20,null],[13,"TCLASResourcesExhausted","","81 TCLAS Resources Exhausted",20,null],[13,"RejectedWithSuggestedBSSTransition","","82 Rejected with Suggested BSS Transition",20,null],[13,"RejectWithRecommendedSchedule","","83 Reject with recommended schedule",20,null],[13,"RejectBecauseNoWakeupScheduleSpecified","","84 Reject because no wakeup schedule specified",20,null],[13,"SuccessTheDestinationSTAIsInPowerSaveMode","","85 Success, the destination STA is in power save mode",20,null],[13,"FSTPendingInProcessOfAdmittingFSTSession","","86 FST pending, in process of admitting FST session",20,null],[13,"PerformingFSTNow","","87 performing FST now",20,null],[13,"FSTPendingGapInBlockAckWindow","","88 FST pending, gap(s) in Block Ack window",20,null],[13,"RejectBecauseOfUPIDSetting","","89 Reject because of U-PID setting",20,null],[13,"AssociationRefusedForSomeExternalReason","","92 (Re)association refused for some external reason",20,null],[13,"AssociationRefusedBecauseOfMemoryLimitsAtTheAP","","93 (Re)association refused because of memory limits at the…",20,null],[13,"AssociationRefusedBecauseEmergencyServicesAreNotSupportedAtTheAP","","94 (Re)association refused because emergency services are…",20,null],[13,"GASQueryResponseNotYetReceived","","95 GAS query response not yet received",20,null],[13,"RejectDSEProcedures","","96 Reject since the request is for transition to a…",20,null],[13,"TheAssociationHasBeenDenied","","97 Reserved 98 Reserved 99 The association has been…",20,null],[13,"TheRequestFailedDueToAReservationConflict","","100 The request failed due to a reservation conflict",20,null],[13,"TheRequestFailedDueToExceededMAFLimit","","101 The request failed due to exceeded MAF limit",20,null],[13,"TheRequestFailedDueToExceededMCCATrackLimit","","102 The request failed due to exceeded MCCA track limit",20,null],[13,"AssociationDeniedBecauseSpectrumManagement","","103 Association denied because the information in the…",20,null],[13,"AssociationDeniedBecauseTheRequestingSTADoesNotSupportVHTFeatures","","104 Association denied because the requesting STA does not…",20,null],[13,"EnablementDenied","","105 Enablement denied",20,null],[13,"EnablementDeniedDueToRestrictionFromAnAuthorizedGDB","","106 Enablement denied due to restriction from an…",20,null],[13,"AuthorizationDeenabled","","107 Authorization deenabled",20,null],[13,"AuthenticationRejectedDueToFILSAuthenticationFailure","","112 Authentication rejected due to FILS authentication…",20,null],[13,"AuthenticationRejectedDueToUnknownAuthenticationServer","","113 Authentication rejected due to unknown Authentication…",20,null],[13,"Reserved","","",20,null],[4,"ReasonCode","","",null,null],[13,"UnspecifiedReason","","1 Unspecified reason",21,null],[13,"PreviousAuthenticationNoLongerValid","","2 Previous authentication no longer valid",21,null],[13,"STALeavingIBSSOrESS","","3 Deauthenticated because sending STA is leaving (or has…",21,null],[13,"Inactivity","","4 Disassociated due to inactivity",21,null],[13,"APIsUnableToHandleAllCurrentlyAssociatedSTAs","","5 Disassociated because AP is unable to handle all…",21,null],[13,"Class2FrameReceivedFromNonauthenticatedSTA","","6 Class 2 frame received from nonauthenticated STA",21,null],[13,"Class3FrameReceivedFromNonassociatedSTA","","7 Class 3 frame received from nonassociated STA",21,null],[13,"STALeavingBSS","","8 Disassociated because sending STA is leaving (or has…",21,null],[13,"NotAuthenticated","","9 STA requesting (re)association is not authenticated with…",21,null],[13,"PowerCapabilityElementIsUnacceptable","","10 Disassociated because the information in the Power…",21,null],[13,"SupportedChannelsElementIsUnacceptable","","11 Disassociated because the information in the Supported…",21,null],[13,"DisassociatedDueToBSSTransitionManagement","","12 Disassociated due to BSS transition management",21,null],[13,"InvalidInformationElement","","13 Invalid information element, i.e., an information…",21,null],[13,"MessageIntegrityCodeFailure","","14 Message integrity code (MIC) failure",21,null],[13,"FourWayHandshakeTimeout","","15 4-Way Handshake timeout",21,null],[13,"GroupKeyHandshakeTimeout","","16 Group Key Handshake timeout",21,null],[13,"InformationDifferent","","17 Information element in 4-Way Handshake different from…",21,null],[13,"InvalidGroupCipher","","18 Invalid group cipher",21,null],[13,"InvalidPairwiseCipher","","19 Invalid pairwise cipher",21,null],[13,"InvalidAKMP","","20 Invalid AKMP",21,null],[13,"UnsupportedRSNInformationElementVersion","","21 Unsupported RSN information element version",21,null],[13,"InvalidRSNInformationElementCapabilities","","22 Invalid RSN information element capabilities",21,null],[13,"IEEE8021XAuthenticationFailed","","23 IEEE 802.1X authentication failed",21,null],[13,"CipherSuiteRejectedBecauseOfTheSecurityPolicy","","24 Cipher suite rejected because of the security policy",21,null],[13,"TDLSDirectLinkTeardownUnreachable","","25 TDLS direct-link teardown due to TDLS peer STA…",21,null],[13,"TDLSDirectLinkTeardownUnspecifiedReason","","26 TDLS direct-link teardown for unspecified reason",21,null],[13,"DisassociatedBecauseSessionTerminatedBySSPRequest","","27 Disassociated because session terminated by SSP request",21,null],[13,"DisassociatedBecauseOfLackOfSSPRoamingAgreement","","28 Disassociated because of lack of SSP roaming agreement",21,null],[13,"RequestedServiceRejected","","29 Requested service rejected because of SSP cipher suite…",21,null],[13,"RequestedServiceNotAuthorizedInThisLocation","","30 Requested service not authorized in this location",21,null],[13,"TSDeleted","","31 TS deleted because QoS AP lacks sufficient bandwidth…",21,null],[13,"DisassociatedForUnspecifiedQoSRelatedReason","","32 Disassociated for unspecified, QoS-related reason",21,null],[13,"QoSAPLacksSufficientBandwidthForThisQoSSTA","","33 Disassociated because QoS AP lacks sufficient bandwidth…",21,null],[13,"ExcessiveNumberOfFramesNotAcknowledged","","34 Disassociated because excessive number of frames need…",21,null],[13,"STAIsTransmittingOutsideTheLimitsOfItsTXOPs","","35 Disassociated because STA is transmitting outside the…",21,null],[13,"RequestedSTALeavingBSS","","36 Requested from peer STA as the STA is leaving the BSS…",21,null],[13,"RequestedSTADoesNotWantToUseTheMechanism","","37 Requested from peer STA as it does not want to use the…",21,null],[13,"RequestedSTAReceivedFrames","","38 Requested from peer STA as the STA received frames…",21,null],[13,"RequestedSTATimeout","","39 Requested from peer STA due to timeout",21,null],[13,"PeerSTADoesNotSupportTheRequestedCipherSuite","","45 Peer STA does not support the requested cipher suite",21,null],[13,"AuthorizedAccessLimitReached","","46 Disassociated because authorized access limit reached",21,null],[13,"DisassociatedDueToExternalServiceRequirements","","47 Disassociated due to external service requirements",21,null],[13,"InvalidFTActionFrameCount","","48 Invalid FT Action frame count",21,null],[13,"InvalidPairwiseMasterKeyIdentifier","","49 Invalid pairwise master key identifier (PMKI)",21,null],[13,"InvalidMDE","","50 Invalid MDE",21,null],[13,"InvalidFTE","","51 Invalid FTE",21,null],[13,"SMECancel","","52 SME cancels the mesh peering instance with the reason…",21,null],[13,"MeshMaxSupportedMaximumNumberOfPeerMeshSTAs","","53 The mesh STA has reached the supported maximum number…",21,null],[13,"InformationViolatesMeshPolicy","","54 The received information violates the Mesh…",21,null],[13,"MeshSTAReceivedAMeshPeeringCloseMessage","","55 The mesh STA has received a Mesh Peering Close message…",21,null],[13,"MeshSTAHasResentMaxRetriesWithoutConfirm","","56 The mesh STA has re-sent dot11MeshMaxRetries Mesh…",21,null],[13,"TheConfirmTimerForTheMeshPeeringInstanceTimesOut","","57 The confirmTimer for the mesh peering instance times out",21,null],[13,"MeshSTAFailsToUnwrapGTK","","58 The mesh STA fails to unwrap the GTK or the values in…",21,null],[13,"MeshSTAReceivesInconsistentInformation","","59 The mesh STA receives inconsistent information about…",21,null],[13,"MeshSTAFailsAuthenticatedMeshPeeringExchange","","60 The mesh STA fails the authenticated mesh peering…",21,null],[13,"MeshSTADoesNotHaveProxyInformation","","61 The mesh STA does not have proxy information for this…",21,null],[13,"MeshSTADoesNotHaveForwardingInformation","","62 The mesh STA does not have forwarding information for…",21,null],[13,"MeshSTALinkNoLongerUsable","","63 The mesh STA determines that the link to the next hop…",21,null],[13,"MacAddressAlreadyExists","","64 The Deauthentication frame was sent because the MAC…",21,null],[13,"MeshSTAPerformsChannelSwitchToMeetRegulatoryRequirements","","65 The mesh STA performs channel switch to meet regulatory…",21,null],[13,"MeshSTAPerformsChannelSwitchWithUnspecifiedReason","","66 The mesh STA performs channel switch with unspecified…",21,null],[13,"Reserved","","",21,null],[11,"new","","",22,[[["bytes"]],["self"]]],[11,"new","","",23,[[],["self"]]],[11,"build","","",23,[[["self"]],["dataframe"]]],[11,"next_layer","","",23,[[["self"]]]],[11,"new","","",24,[[["into",["bytes"]],["bytes"]],["self"]]],[11,"next_layer","","",24,[[["self"]],[["option",["bytes"]],["bytes"]]]],[11,"new","","",25,[[],["self"]]],[11,"build","","",25,[[["self"]],["frame"]]],[11,"new","","",26,[[["into",["bytes"]],["bytes"]],["self"]]],[11,"next_layer","","",26,[[["self"]],[["framelayer"],["option",["framelayer"]]]]],[11,"new","","",27,[[["bytes"]],["self"]]],[11,"new","","",28,[[["bytes"]],["self"]]],[11,"from_u16","","",4,[[["u16"]],["self"]]],[11,"new","","",29,[[["bytes"]],["self"]]],[11,"from_bytes","","",0,[[],["self"]]],[11,"new","","",30,[[["bytes"]],["self"]]],[11,"new_blank","","",31,[[],["self"]]],[11,"new_defaults","","",31,[[],["self"]]],[11,"build","","",31,[[["self"]],["managementframe"]]],[11,"new","","",32,[[],["self"]]],[11,"build","","",32,[[["self"]],["deauthenticationframe"]]],[11,"new","","",33,[[["into",["bytes"]],["bytes"]],["self"]]],[11,"new","","",34,[[],["self"]]],[11,"build","","",34,[[["self"]],["disassociateframe"]]],[11,"new","","",35,[[["into",["bytes"]],["bytes"]],["self"]]],[11,"new","","",36,[[["bytes"]],["self"]]],[11,"new","","",37,[[["bytes"]],["self"]]],[11,"new","","",38,[[],["self"]]],[11,"add","","",38,[[["self"],["u8"]]]],[11,"get_all","","",38,[[["self"]],["hashmap"]]],[11,"get_bytes","","",38,[[["self"],["tagname"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"ssid","","",38,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"supported_rates","","in Mbit/sec",38,[[["self"]],[["vec",["f64"]],["option",["vec"]]]]],[11,"channel","","",38,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"rsn","","",38,[[["self"]],[["rsnversion"],["option",["rsnversion"]]]]],[11,"new","","",39,[[["string"]],["self"]]],[11,"new","","",40,[[["into",["bytes"]],["bytes"]],["self"]]],[11,"next_layer","","",40,[[["self"]],[["managementframelayer"],["option",["managementframelayer"]]]]],[11,"from_bools","","",12,[[["bool"]],["self"]]],[11,"to_bools","","returns (`from_ds`, `to_ds`)",12,[[]]],[11,"from_u8","","",14,[[["u8"]],["self"]]],[11,"into_u8","","",14,[[],["u8"]]],[11,"from_u8","","",15,[[["u8"]],["self"]]],[11,"into_u8","","",15,[[],["u8"]]],[11,"from_u8","","",16,[[["frametype"],["u8"]],["self"]]],[11,"into_u8","","",16,[[],["u8"]]],[11,"from_u8","","",17,[[["u8"]],["self"]]],[11,"into_u8","","",17,[[],["u8"]]],[11,"from_u8","","",18,[[["u8"]],["self"]]],[11,"into_u8","","",18,[[],["u8"]]],[11,"from_u8","","",19,[[["u8"]],["self"]]],[11,"into_u8","","",19,[[],["u8"]]],[11,"from_u16","","",20,[[["u16"]],["self"]]],[11,"into_u16","","",20,[[],["u16"]]],[11,"from_u16","","",21,[[["u16"]],["self"]]],[11,"into_u16","","",21,[[],["u16"]]],[8,"ControlFrameTrait","","",null,null],[11,"addr2","","",41,[[["self"]],["macaddress"]]],[11,"transmitter_address","","",41,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"source_address","","",41,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"bssid_address","","",41,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"station_address","","",41,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[8,"DataFrameBuilderTrait","","",null,null],[11,"addr2","","",42,[[["self"],["macaddress"]]]],[11,"addr3","","",42,[[["self"],["macaddress"]]]],[11,"addr4","","",42,[[["self"],["macaddress"]]]],[10,"transmitter_address","","",42,[[["self"],["macaddress"]]]],[10,"source_address","","",42,[[["self"],["macaddress"]]]],[10,"bssid_address","","",42,[[["self"],["macaddress"]]]],[10,"station_address","","",42,[[["self"],["macaddress"]]]],[8,"DataFrameTrait","","",null,null],[11,"addr2","","",43,[[["self"]],["macaddress"]]],[11,"addr3","","",43,[[["self"]],["macaddress"]]],[11,"addr4","","",43,[[["self"]],["macaddress"]]],[11,"transmitter_address","","",43,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"source_address","","Source Address Who the packet came from.",43,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"bssid_address","","",43,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"station_address","","",43,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"qos_control","","",43,[[["self"]],["u8"]]],[8,"FragmentSequenceTrait","","",null,null],[18,"FRAGMENT_SEQUENCE_START","","",44,null],[18,"FRAGMENT_SEQUENCE_END","","",44,null],[11,"fragment_number","","Fragment Number",44,[[["self"]],["u8"]]],[11,"sequence_number","","Sequence Number",44,[[["self"]],["u16"]]],[8,"FragmentSequenceBuilderTrait","","",null,null],[18,"FRAGMENT_SEQUENCE_START","","",45,null],[18,"FRAGMENT_SEQUENCE_END","","",45,null],[11,"fragment_number","","Fragment Number",45,[[["self"],["u8"]]]],[11,"sequence_number","","Sequence Number",45,[[["u16"],["self"]]]],[8,"FrameBuilderTrait","","",null,null],[10,"bytes","","",46,[[["self"]]]],[10,"bytes_mut","","",46,[[["self"]]]],[11,"version","","",46,[[["self"],["frameversion"]]]],[11,"type_","","",46,[[["self"],["frametype"]]]],[11,"subtype","","",46,[[["self"],["framesubtype"]]]],[11,"to_ds","","",46,[[["self"],["bool"]]]],[11,"from_ds","","",46,[[["self"],["bool"]]]],[11,"ds_status","","",46,[[["dsstatus"],["self"]]]],[11,"more_fragments","","",46,[[["self"],["bool"]]]],[11,"retry","","",46,[[["self"],["bool"]]]],[11,"pwr_mgt","","",46,[[["self"],["bool"]]]],[11,"more_data","","",46,[[["self"],["bool"]]]],[11,"protected","","",46,[[["self"],["bool"]]]],[11,"order","","",46,[[["self"],["bool"]]]],[11,"duration_or_id","","",46,[[["durationid"],["self"]]]],[11,"addr1","","",46,[[["self"],["macaddress"]]]],[11,"receiver_address","","Receiver Address Who this packet is destined for…",46,[[["self"],["macaddress"]]]],[11,"destination_address","","Destination Address Who the packet is destined for.",46,[[["self"],["macaddress"]]]],[8,"FrameTrait","","",null,null],[10,"bytes","","",47,[[["self"]],["bytes"]]],[11,"version","","",47,[[["self"]],["frameversion"]]],[11,"type_","","Main IEEE 802.11 Frame Type",47,[[["self"]],["frametype"]]],[11,"subtype","","IEEE 802.11 Frame Subtype",47,[[["self"]],["framesubtype"]]],[11,"to_ds","","to Distribution System",47,[[["self"]],["bool"]]],[11,"from_ds","","from Distribution System",47,[[["self"]],["bool"]]],[11,"ds_status","","",47,[[["self"]],["dsstatus"]]],[11,"more_fragments","","0: This is the last fragment 1: More fragments follow",47,[[["self"]],["bool"]]],[11,"retry","","0: Frame is not being retransmitted 1: Frame is being…",47,[[["self"]],["bool"]]],[11,"pwr_mgt","","0: STA will stay up 1: STA will go to sleep",47,[[["self"]],["bool"]]],[11,"more_data","","0: No data buffered 1: Data is buffered for STA at AP",47,[[["self"]],["bool"]]],[11,"protected","","0: Data is not protected 1: Data is protected",47,[[["self"]],["bool"]]],[11,"order","","0: Not strictly ordered 1: Strictly ordered",47,[[["self"]],["bool"]]],[11,"duration_or_id","","Duration or Association Identifier",47,[[["self"]],["durationid"]]],[11,"addr1","","",47,[[["self"]],["macaddress"]]],[11,"receiver_address","","Receiver Address Who this packet is destined for…",47,[[["self"]],["macaddress"]]],[11,"destination_address","","Destination Address Who the packet is destined for.",47,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[8,"AssociationRequestFixedParametersTrait","","",null,null],[18,"FIXED_PARAMETERS_START","","",48,null],[18,"FIXED_PARAMETERS_END","","",48,null],[11,"capabilities_info","","",48,[[["self"]],["capabilitiesinfo"]]],[11,"listen_interval","","",48,[[["self"]],["u16"]]],[8,"AssociationResponseFixedParametersTrait","","",null,null],[18,"FIXED_PARAMETERS_START","","",49,null],[18,"FIXED_PARAMETERS_END","","",49,null],[11,"capabilities_info","","",49,[[["self"]],["capabilitiesinfo"]]],[11,"status_code","","",49,[[["self"]],["statuscode"]]],[11,"association_id","","",49,[[["self"]],["u16"]]],[8,"AuthenticationFixedParametersTrait","","",null,null],[18,"FIXED_PARAMETERS_START","","",50,null],[18,"FIXED_PARAMETERS_END","","",50,null],[11,"authentication_algorithm","","",50,[[["self"]],["authenticationalgorithm"]]],[11,"authentication_seq","","",50,[[["self"]],["u16"]]],[11,"status_code","","",50,[[["self"]],["statuscode"]]],[8,"BeaconFixedParametersTrait","","",null,null],[18,"FIXED_PARAMETERS_START","","",51,null],[11,"timestamp","","microseconds it has been active",51,[[["self"]],["u64"]]],[11,"beacon_interval","","in seconds",51,[[["self"]],["f64"]]],[11,"capabilities_info","","",51,[[["self"]],["capabilitiesinfo"]]],[8,"ManagementFrameBuilderTrait","","",null,null],[11,"addr2","","",52,[[["self"],["macaddress"]]]],[11,"addr3","","",52,[[["self"],["macaddress"]]]],[11,"transmitter_address","","Transmitter Address Who this packet came from wirelessly.",52,[[["self"],["macaddress"]]]],[11,"source_address","","Source Address Who the packet came from.",52,[[["self"],["macaddress"]]]],[11,"bssid_address","","",52,[[["self"],["macaddress"]]]],[11,"station_address","","",52,[[["self"],["macaddress"]]]],[8,"DeauthenticationFixedParametersTrait","","",null,null],[18,"FIXED_PARAMETERS_START","","",53,null],[18,"FIXED_PARAMETERS_END","","",53,null],[11,"reason_code","","",53,[[["self"]],["reasoncode"]]],[8,"DeauthenticationFixedParametersBuilderTrait","","",null,null],[18,"FIXED_PARAMETERS_START","","",54,null],[18,"FIXED_PARAMETERS_END","","",54,null],[11,"reason_code","","",54,[[["self"],["reasoncode"]]]],[8,"DisassociateFixedParametersTrait","","",null,null],[18,"FIXED_PARAMETERS_START","","",55,null],[18,"FIXED_PARAMETERS_END","","",55,null],[11,"reason_code","","",55,[[["self"]],["reasoncode"]]],[8,"DisassociateFixedParametersBuilderTrait","","",null,null],[18,"FIXED_PARAMETERS_START","","",56,null],[18,"FIXED_PARAMETERS_END","","",56,null],[11,"reason_code","","",56,[[["self"],["reasoncode"]]]],[8,"TaggedParametersTrait","","",null,null],[18,"TAGGED_PARAMETERS_START","","",57,null],[11,"tagged_parameters","","",57,[[["self"]],[["result",["taggedparameters","overflowerror"]],["overflowerror"],["taggedparameters"]]]],[11,"ssid","","",57,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[8,"ManagementFrameTrait","","",null,null],[11,"addr2","","",58,[[["self"]],["macaddress"]]],[11,"addr3","","",58,[[["self"]],["macaddress"]]],[11,"transmitter_address","","Transmitter Address Who this packet came from wirelessly.",58,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"source_address","","Source Address Who the packet came from.",58,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"bssid_address","","Basic Service Set Address (BSSID) Basic Service Set ID for…",58,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"station_address","","Station Address",58,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"fmt","","Debug format for MacAddress is HexString notation",59,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","Display format is canonical format (00-00-00-00-00-00)",59,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"clone","","",59,[[["self"]],["macaddress"]]],[11,"eq","","",59,[[["macaddress"],["self"]],["bool"]]],[11,"ne","","",59,[[["macaddress"],["self"]],["bool"]]],[11,"decode","","Decode a MacAddress from a string in canonical form",59,[[["d"]],[["result",["macaddress"]],["macaddress"]]]],[11,"cmp","","",59,[[["macaddress"],["self"]],["ordering"]]],[11,"default","","Create a Default MacAddress (00-00-00-00-00-00)",59,[[],["macaddress"]]],[11,"from_str","","Create a MacAddress from String",59,[[["str"]],[["parseerror"],["result",["macaddress","parseerror"]],["macaddress"]]]],[11,"encode","","Encode a MacAddress as canonical form",59,[[["self"],["e"]],["result"]]],[11,"partial_cmp","","",59,[[["macaddress"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",59,[[["macaddress"],["self"]],["bool"]]],[11,"le","","",59,[[["macaddress"],["self"]],["bool"]]],[11,"gt","","",59,[[["macaddress"],["self"]],["bool"]]],[11,"ge","","",59,[[["macaddress"],["self"]],["bool"]]],[11,"transmitter_address","","",23,[[["self"],["macaddress"]]]],[11,"source_address","","",23,[[["self"],["macaddress"]]]],[11,"bssid_address","","",23,[[["self"],["macaddress"]]]],[11,"station_address","","",23,[[["self"],["macaddress"]]]],[11,"bytes","","",23,[[["self"]]]],[11,"bytes_mut","","",23,[[["self"]]]],[11,"addr1","","",23,[[["self"],["macaddress"]]]],[11,"destination_address","","",23,[[["self"],["macaddress"]]]],[11,"bytes","","",25,[[["self"]]]],[11,"bytes_mut","","",25,[[["self"]]]],[11,"bytes","","",31,[[["self"]]]],[11,"bytes_mut","","",31,[[["self"]]]],[11,"bytes","","",32,[[["self"]]]],[11,"bytes_mut","","",32,[[["self"]]]],[11,"bytes","","",34,[[["self"]]]],[11,"bytes_mut","","",34,[[["self"]]]],[11,"bytes","","",22,[[["self"]],["bytes"]]],[11,"addr1","","",22,[[["self"]],["macaddress"]]],[11,"destination_address","","",22,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"bytes","","",24,[[["self"]],["bytes"]]],[11,"addr1","","",24,[[["self"]],["macaddress"]]],[11,"destination_address","","",24,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"bytes","","",26,[[["self"]],["bytes"]]],[11,"bytes","","",27,[[["self"]],["bytes"]]],[11,"bytes","","",28,[[["self"]],["bytes"]]],[11,"bytes","","",29,[[["self"]],["bytes"]]],[11,"bytes","","",30,[[["self"]],["bytes"]]],[11,"bytes","","",33,[[["self"]],["bytes"]]],[11,"bytes","","",35,[[["self"]],["bytes"]]],[11,"bytes","","",36,[[["self"]],["bytes"]]],[11,"bytes","","",37,[[["self"]],["bytes"]]],[11,"bytes","","",40,[[["self"]],["bytes"]]],[11,"clone","","",10,[[["self"]],["tagname"]]],[11,"clone","","",12,[[["self"]],["dsstatus"]]],[11,"clone","","",13,[[["self"]],["durationid"]]],[11,"clone","","",14,[[["self"]],["frameversion"]]],[11,"clone","","",15,[[["self"]],["frametype"]]],[11,"clone","","",16,[[["self"]],["framesubtype"]]],[11,"clone","","",17,[[["self"]],["managementsubtype"]]],[11,"clone","","",18,[[["self"]],["controlsubtype"]]],[11,"clone","","",19,[[["self"]],["datasubtype"]]],[11,"default","","",23,[[],["dataframebuilder"]]],[11,"default","","",25,[[],["framebuilder"]]],[11,"default","","",32,[[],["deauthenticationframebuilder"]]],[11,"default","","",34,[[],["disassociateframebuilder"]]],[11,"default","","",38,[[],["taggedparameters"]]],[11,"default","","",2,[[],["rsn"]]],[11,"eq","","",4,[[["self"],["authenticationalgorithm"]],["bool"]]],[11,"ne","","",4,[[["self"],["authenticationalgorithm"]],["bool"]]],[11,"eq","","",0,[[["capabilitiesinfo"],["self"]],["bool"]]],[11,"ne","","",0,[[["capabilitiesinfo"],["self"]],["bool"]]],[11,"eq","","",1,[[["rsncapabilities"],["self"]],["bool"]]],[11,"ne","","",1,[[["rsncapabilities"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["rsnversion"]],["bool"]]],[11,"ne","","",5,[[["self"],["rsnversion"]],["bool"]]],[11,"eq","","",2,[[["self"],["rsn"]],["bool"]]],[11,"ne","","",2,[[["self"],["rsn"]],["bool"]]],[11,"eq","","",6,[[["ciphersuite"],["self"]],["bool"]]],[11,"ne","","",6,[[["ciphersuite"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["ciphersuitetype"]],["bool"]]],[11,"ne","","",7,[[["self"],["ciphersuitetype"]],["bool"]]],[11,"eq","","",8,[[["akmsuite"],["self"]],["bool"]]],[11,"ne","","",8,[[["akmsuite"],["self"]],["bool"]]],[11,"eq","","",9,[[["akmsuitetype"],["self"]],["bool"]]],[11,"ne","","",9,[[["akmsuitetype"],["self"]],["bool"]]],[11,"eq","","",10,[[["tagname"],["self"]],["bool"]]],[11,"ne","","",10,[[["tagname"],["self"]],["bool"]]],[11,"eq","","",12,[[["dsstatus"],["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["durationid"]],["bool"]]],[11,"ne","","",13,[[["self"],["durationid"]],["bool"]]],[11,"eq","","",14,[[["frameversion"],["self"]],["bool"]]],[11,"ne","","",14,[[["frameversion"],["self"]],["bool"]]],[11,"eq","","",15,[[["frametype"],["self"]],["bool"]]],[11,"ne","","",15,[[["frametype"],["self"]],["bool"]]],[11,"eq","","",16,[[["framesubtype"],["self"]],["bool"]]],[11,"ne","","",16,[[["framesubtype"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["managementsubtype"]],["bool"]]],[11,"ne","","",17,[[["self"],["managementsubtype"]],["bool"]]],[11,"eq","","",18,[[["self"],["controlsubtype"]],["bool"]]],[11,"ne","","",18,[[["self"],["controlsubtype"]],["bool"]]],[11,"eq","","",19,[[["datasubtype"],["self"]],["bool"]]],[11,"ne","","",19,[[["datasubtype"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",20,[[["self"],["statuscode"]],["bool"]]],[11,"eq","","",21,[[["reasoncode"],["self"]],["bool"]]],[11,"ne","","",21,[[["reasoncode"],["self"]],["bool"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"description","","",39,[[["self"]],["str"]]],[11,"new","","Create a new MacAddress from `[u8; 6]`.",59,[[],["macaddress"]]],[11,"from_bytes","","Create a new MacAddress from a byte slice.",59,[[],[["result",["macaddress"]],["macaddress"]]]],[11,"nil","","Returns empty EUI-48 address",59,[[],["macaddress"]]],[11,"broadcast","","Returns 'ff:ff:ff:ff:ff:ff', a MAC broadcast address",59,[[],["macaddress"]]],[11,"is_nil","","Returns true if the address is '00:00:00:00:00:00'",59,[[["self"]],["bool"]]],[11,"is_broadcast","","Returns true if the address is 'ff:ff:ff:ff:ff:ff'",59,[[["self"]],["bool"]]],[11,"is_unicast","","Returns true if bit 1 of Y is 0 in address…",59,[[["self"]],["bool"]]],[11,"is_multicast","","Returns true if bit 1 of Y is 1 in address…",59,[[["self"]],["bool"]]],[11,"is_universal","","Returns true if bit 2 of Y is 0 in address…",59,[[["self"]],["bool"]]],[11,"is_local","","Returns true if bit 2 of Y is 1 in address…",59,[[["self"]],["bool"]]],[11,"to_canonical","","Returns a String representation in the format…",59,[[["self"]],["string"]]],[11,"to_hex_string","","Returns a String representation in the format…",59,[[["self"]],["string"]]],[11,"to_dot_string","","Returns a String representation in the format…",59,[[["self"]],["string"]]],[11,"to_hexadecimal","","Returns a String representation in the format…",59,[[["self"]],["string"]]],[11,"to_interfaceid","","Returns a String representation in the EUI-64 interface ID…",59,[[["self"]],["string"]]],[11,"to_link_local","","Returns a String representation in the IPv6 link local…",59,[[["self"]],["string"]]],[11,"to_string","","Returns a String in the format selected by fmt",59,[[["macaddressformat"],["self"]],["string"]]],[11,"parse_str","","Parses a String representation from any format supported",59,[[["str"]],[["parseerror"],["result",["macaddress","parseerror"]],["macaddress"]]]],[11,"as_bytes","","Return the internal structure as a slice of bytes",59,[[["self"]]]],[11,"to_array","","Returns an array in Eui48. Works as an inverse function of…",59,[[["self"]]]],[11,"get_display_format","","Returns Display MacAddressFormat, determined at compile…",59,[[],["macaddressformat"]]],[11,"addr2","","",41,[[["self"]],["macaddress"]]],[11,"transmitter_address","","",41,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"source_address","","",41,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"bssid_address","","",41,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"station_address","","",41,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"addr2","","",42,[[["self"],["macaddress"]]]],[11,"addr3","","",42,[[["self"],["macaddress"]]]],[11,"addr4","","",42,[[["self"],["macaddress"]]]],[11,"addr2","","",43,[[["self"]],["macaddress"]]],[11,"addr3","","",43,[[["self"]],["macaddress"]]],[11,"addr4","","",43,[[["self"]],["macaddress"]]],[11,"transmitter_address","","",43,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"source_address","","Source Address Who the packet came from.",43,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"bssid_address","","",43,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"station_address","","",43,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"qos_control","","",43,[[["self"]],["u8"]]],[18,"FRAGMENT_SEQUENCE_START","","",44,null],[18,"FRAGMENT_SEQUENCE_END","","",44,null],[11,"fragment_number","","Fragment Number",44,[[["self"]],["u8"]]],[11,"sequence_number","","Sequence Number",44,[[["self"]],["u16"]]],[18,"FRAGMENT_SEQUENCE_START","","",45,null],[18,"FRAGMENT_SEQUENCE_END","","",45,null],[11,"fragment_number","","Fragment Number",45,[[["self"],["u8"]]]],[11,"sequence_number","","Sequence Number",45,[[["u16"],["self"]]]],[11,"version","","",46,[[["self"],["frameversion"]]]],[11,"type_","","",46,[[["self"],["frametype"]]]],[11,"subtype","","",46,[[["self"],["framesubtype"]]]],[11,"to_ds","","",46,[[["self"],["bool"]]]],[11,"from_ds","","",46,[[["self"],["bool"]]]],[11,"ds_status","","",46,[[["dsstatus"],["self"]]]],[11,"more_fragments","","",46,[[["self"],["bool"]]]],[11,"retry","","",46,[[["self"],["bool"]]]],[11,"pwr_mgt","","",46,[[["self"],["bool"]]]],[11,"more_data","","",46,[[["self"],["bool"]]]],[11,"protected","","",46,[[["self"],["bool"]]]],[11,"order","","",46,[[["self"],["bool"]]]],[11,"duration_or_id","","",46,[[["durationid"],["self"]]]],[11,"addr1","","",46,[[["self"],["macaddress"]]]],[11,"receiver_address","","Receiver Address Who this packet is destined for…",46,[[["self"],["macaddress"]]]],[11,"destination_address","","Destination Address Who the packet is destined for.",46,[[["self"],["macaddress"]]]],[11,"version","","",47,[[["self"]],["frameversion"]]],[11,"type_","","Main IEEE 802.11 Frame Type",47,[[["self"]],["frametype"]]],[11,"subtype","","IEEE 802.11 Frame Subtype",47,[[["self"]],["framesubtype"]]],[11,"to_ds","","to Distribution System",47,[[["self"]],["bool"]]],[11,"from_ds","","from Distribution System",47,[[["self"]],["bool"]]],[11,"ds_status","","",47,[[["self"]],["dsstatus"]]],[11,"more_fragments","","0: This is the last fragment 1: More fragments follow",47,[[["self"]],["bool"]]],[11,"retry","","0: Frame is not being retransmitted 1: Frame is being…",47,[[["self"]],["bool"]]],[11,"pwr_mgt","","0: STA will stay up 1: STA will go to sleep",47,[[["self"]],["bool"]]],[11,"more_data","","0: No data buffered 1: Data is buffered for STA at AP",47,[[["self"]],["bool"]]],[11,"protected","","0: Data is not protected 1: Data is protected",47,[[["self"]],["bool"]]],[11,"order","","0: Not strictly ordered 1: Strictly ordered",47,[[["self"]],["bool"]]],[11,"duration_or_id","","Duration or Association Identifier",47,[[["self"]],["durationid"]]],[11,"addr1","","",47,[[["self"]],["macaddress"]]],[11,"receiver_address","","Receiver Address Who this packet is destined for…",47,[[["self"]],["macaddress"]]],[11,"destination_address","","Destination Address Who the packet is destined for.",47,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[18,"FIXED_PARAMETERS_START","","",48,null],[18,"FIXED_PARAMETERS_END","","",48,null],[11,"capabilities_info","","",48,[[["self"]],["capabilitiesinfo"]]],[11,"listen_interval","","",48,[[["self"]],["u16"]]],[18,"FIXED_PARAMETERS_START","","",49,null],[18,"FIXED_PARAMETERS_END","","",49,null],[11,"capabilities_info","","",49,[[["self"]],["capabilitiesinfo"]]],[11,"status_code","","",49,[[["self"]],["statuscode"]]],[11,"association_id","","",49,[[["self"]],["u16"]]],[18,"FIXED_PARAMETERS_START","","",50,null],[18,"FIXED_PARAMETERS_END","","",50,null],[11,"authentication_algorithm","","",50,[[["self"]],["authenticationalgorithm"]]],[11,"authentication_seq","","",50,[[["self"]],["u16"]]],[11,"status_code","","",50,[[["self"]],["statuscode"]]],[18,"FIXED_PARAMETERS_START","","",51,null],[11,"timestamp","","microseconds it has been active",51,[[["self"]],["u64"]]],[11,"beacon_interval","","in seconds",51,[[["self"]],["f64"]]],[11,"capabilities_info","","",51,[[["self"]],["capabilitiesinfo"]]],[11,"addr2","","",52,[[["self"],["macaddress"]]]],[11,"addr3","","",52,[[["self"],["macaddress"]]]],[11,"transmitter_address","","Transmitter Address Who this packet came from wirelessly.",52,[[["self"],["macaddress"]]]],[11,"source_address","","Source Address Who the packet came from.",52,[[["self"],["macaddress"]]]],[11,"bssid_address","","",52,[[["self"],["macaddress"]]]],[11,"station_address","","",52,[[["self"],["macaddress"]]]],[18,"FIXED_PARAMETERS_START","","",53,null],[18,"FIXED_PARAMETERS_END","","",53,null],[11,"reason_code","","",53,[[["self"]],["reasoncode"]]],[18,"FIXED_PARAMETERS_START","","",54,null],[18,"FIXED_PARAMETERS_END","","",54,null],[11,"reason_code","","",54,[[["self"],["reasoncode"]]]],[18,"FIXED_PARAMETERS_START","","",55,null],[18,"FIXED_PARAMETERS_END","","",55,null],[11,"reason_code","","",55,[[["self"]],["reasoncode"]]],[18,"FIXED_PARAMETERS_START","","",56,null],[18,"FIXED_PARAMETERS_END","","",56,null],[11,"reason_code","","",56,[[["self"],["reasoncode"]]]],[18,"TAGGED_PARAMETERS_START","","",57,null],[11,"tagged_parameters","","",57,[[["self"]],[["result",["taggedparameters","overflowerror"]],["overflowerror"],["taggedparameters"]]]],[11,"ssid","","",57,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"addr2","","",58,[[["self"]],["macaddress"]]],[11,"addr3","","",58,[[["self"]],["macaddress"]]],[11,"transmitter_address","","Transmitter Address Who this packet came from wirelessly.",58,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"source_address","","Source Address Who the packet came from.",58,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"bssid_address","","Basic Service Set Address (BSSID) Basic Service Set ID for…",58,[[["self"]],[["macaddress"],["option",["macaddress"]]]]],[11,"station_address","","Station Address",58,[[["self"]],[["macaddress"],["option",["macaddress"]]]]]],"p":[[3,"CapabilitiesInfo"],[3,"RSNCapabilities"],[3,"RSN"],[4,"FrameLayer"],[4,"AuthenticationAlgorithm"],[4,"RSNVersion"],[4,"CipherSuite"],[4,"CipherSuiteType"],[4,"AKMSuite"],[4,"AKMSuiteType"],[4,"TagName"],[4,"ManagementFrameLayer"],[4,"DSStatus"],[4,"DurationID"],[4,"FrameVersion"],[4,"FrameType"],[4,"FrameSubtype"],[4,"ManagementSubtype"],[4,"ControlSubtype"],[4,"DataSubtype"],[4,"StatusCode"],[4,"ReasonCode"],[3,"ControlFrame"],[3,"DataFrameBuilder"],[3,"DataFrame"],[3,"FrameBuilder"],[3,"Frame"],[3,"AssociationRequestFrame"],[3,"AssociationResponseFrame"],[3,"AuthenticationFrame"],[3,"BeaconFrame"],[3,"ManagementFrameBuilder"],[3,"DeauthenticationFrameBuilder"],[3,"DeauthenticationFrame"],[3,"DisassociateFrameBuilder"],[3,"DisassociateFrame"],[3,"ProbeRequestFrame"],[3,"ProbeResponseFrame"],[3,"TaggedParameters"],[3,"OverflowError"],[3,"ManagementFrame"],[8,"ControlFrameTrait"],[8,"DataFrameBuilderTrait"],[8,"DataFrameTrait"],[8,"FragmentSequenceTrait"],[8,"FragmentSequenceBuilderTrait"],[8,"FrameBuilderTrait"],[8,"FrameTrait"],[8,"AssociationRequestFixedParametersTrait"],[8,"AssociationResponseFixedParametersTrait"],[8,"AuthenticationFixedParametersTrait"],[8,"BeaconFixedParametersTrait"],[8,"ManagementFrameBuilderTrait"],[8,"DeauthenticationFixedParametersTrait"],[8,"DeauthenticationFixedParametersBuilderTrait"],[8,"DisassociateFixedParametersTrait"],[8,"DisassociateFixedParametersBuilderTrait"],[8,"TaggedParametersTrait"],[8,"ManagementFrameTrait"],[3,"MacAddress"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","i":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line…",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style…",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64…",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following…",4,[[["config"],["self"]],["string"]]],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64…",5,[[["self"]],[["frombase64error"],["vec",["u8"]],["result",["vec","frombase64error"]]]]],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the…",7,[[["self"]],["string"]]],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal…",8,[[["self"]],[["result",["vec","fromhexerror"]],["vec",["u8"]],["fromhexerror"]]]],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in…",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of…",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json…",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack. For example, Key(\"foo\"),…",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,[[["errorcode"]],["str"]]],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,[[["str"]],[["decoderesult"],["decodable"]]]],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,[[["t"]],[["string"],["encoderesult",["string"]]]]],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a…",null,[[["t"]],[["asjson"],["encodable"]]]],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to…",null,[[["t"]],[["encodable"],["asprettyjson"]]]],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,[[["self"]],["json"]]],[11,"new_pretty","","Creates a new encoder whose output will be written in…",17,[[["write"]],["encoder"]]],[11,"new","","Creates a new encoder whose output will be written in…",17,[[["write"]],["encoder"]]],[11,"set_indent","","Set the number of spaces to indent for each level. This is…",17,[[["self"],["u32"]],["result"]]],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",9,[[["read"]],[["buildererror"],["result",["buildererror"]]]]],[11,"from_str","","Decodes a json value from a string",9,[[["str"]],[["buildererror"],["result",["buildererror"]]]]],[11,"pretty","","Borrow this json object as a pretty object to generate a…",9,[[["self"]],["prettyjson"]]],[11,"find","","If the Json value is an Object, returns the value…",9,[[["str"],["self"]],[["option",["json"]],["json"]]]],[11,"find_path","","Attempts to get a nested Json Object for each key in…",9,[[["self"]],[["option",["json"]],["json"]]]],[11,"search","","If the Json value is an Object, performs a depth-first…",9,[[["str"],["self"]],[["option",["json"]],["json"]]]],[11,"is_object","","Returns true if the Json value is an Object. Returns false…",9,[[["self"]],["bool"]]],[11,"as_object","","If the Json value is an Object, returns a reference to the…",9,[[["self"]],[["object"],["option",["object"]]]]],[11,"as_object_mut","","If the Json value is an Object, returns a mutable…",9,[[["self"]],[["option",["object"]],["object"]]]],[11,"into_object","","If the Json value is an Object, returns the associated…",9,[[],[["option",["object"]],["object"]]]],[11,"is_array","","Returns true if the Json value is an Array. Returns false…",9,[[["self"]],["bool"]]],[11,"as_array","","If the Json value is an Array, returns a reference to the…",9,[[["self"]],[["array"],["option",["array"]]]]],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference…",9,[[["self"]],[["option",["array"]],["array"]]]],[11,"into_array","","If the Json value is an Array, returns the associated…",9,[[],[["array"],["option",["array"]]]]],[11,"is_string","","Returns true if the Json value is a String. Returns false…",9,[[["self"]],["bool"]]],[11,"as_string","","If the Json value is a String, returns the associated str.…",9,[[["self"]],[["option",["str"]],["str"]]]],[11,"is_number","","Returns true if the Json value is a Number. Returns false…",9,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the Json value is a i64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the Json value is a u64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the Json value is a f64. Returns false…",9,[[["self"]],["bool"]]],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.…",9,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.…",9,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.…",9,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false…",9,[[["self"]],["bool"]]],[11,"as_boolean","","If the Json value is a Boolean, returns the associated…",9,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"is_null","","Returns true if the Json value is a Null. Returns false…",9,[[["self"]],["bool"]]],[11,"as_null","","If the Json value is a Null, returns (). Returns None…",9,[[["self"]],["option"]]],[11,"new","","",18,[[],["stack"]]],[11,"len","","Returns The number of elements in the Stack.",18,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the stack is empty.",18,[[["self"]],["bool"]]],[11,"get","","Provides access to the StackElement at a given index.…",18,[[["usize"],["self"]],["stackelement"]]],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,[[["self"]],["bool"]]],[11,"starts_with","","Returns true if the bottom-most elements of this stack are…",18,[[["self"]],["bool"]]],[11,"ends_with","","Returns true if the top-most elements of this stack are…",18,[[["self"]],["bool"]]],[11,"top","","Returns the top-most element (if any).",18,[[["self"]],[["stackelement"],["option",["stackelement"]]]]],[11,"new","","Creates the JSON parser.",19,[[["t"]],["parser"]]],[11,"stack","","Provides access to the current position in the logical…",19,[[["self"]],["stack"]]],[11,"new","","Create a JSON Builder.",20,[[["t"]],["builder"]]],[11,"build","","",20,[[["self"]],[["json"],["buildererror"],["result",["json","buildererror"]]]]],[11,"new","","Creates a new decoder instance for decoding the specified…",21,[[["json"]],["decoder"]]],[11,"indent","","Set the indentation level for the emitted JSON",22,[[["u32"]],["asprettyjson"]]],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",23,null],[10,"read_nil","","Read a nil value.",23,[[["self"]],["result"]]],[10,"read_usize","","Read a usize value.",23,[[["self"]],[["usize"],["result",["usize"]]]]],[10,"read_u64","","Read a u64 value.",23,[[["self"]],[["result",["u64"]],["u64"]]]],[10,"read_u32","","Read a u32 value.",23,[[["self"]],[["u32"],["result",["u32"]]]]],[10,"read_u16","","Read a u16 value.",23,[[["self"]],[["u16"],["result",["u16"]]]]],[10,"read_u8","","Read a u8 value.",23,[[["self"]],[["result",["u8"]],["u8"]]]],[10,"read_isize","","Read a isize value.",23,[[["self"]],[["result",["isize"]],["isize"]]]],[10,"read_i64","","Read a i64 value.",23,[[["self"]],[["i64"],["result",["i64"]]]]],[10,"read_i32","","Read a i32 value.",23,[[["self"]],[["result",["i32"]],["i32"]]]],[10,"read_i16","","Read a i16 value.",23,[[["self"]],[["i16"],["result",["i16"]]]]],[10,"read_i8","","Read a i8 value.",23,[[["self"]],[["i8"],["result",["i8"]]]]],[10,"read_bool","","Read a bool value.",23,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"read_f64","","Read a f64 value.",23,[[["self"]],[["f64"],["result",["f64"]]]]],[10,"read_f32","","Read a f32 value.",23,[[["self"]],[["f32"],["result",["f32"]]]]],[10,"read_char","","Read a char value.",23,[[["self"]],[["result",["char"]],["char"]]]],[10,"read_str","","Read a string value.",23,[[["self"]],[["string"],["result",["string"]]]]],[10,"read_enum","","Read an enumeration value.",23,[[["str"],["self"],["f"]],["result"]]],[10,"read_enum_variant","","Read an enumeration value.",23,[[["self"],["f"]],["result"]]],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_enum_struct_variant","","Read an enumeration value.",23,[[["self"],["f"]],["result"]]],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",23,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"read_struct","","Read an struct value.",23,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"read_struct_field","","Read a field for a struct value.",23,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"read_tuple","","Read a tuple value.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_tuple_arg","","Read a data item for a tuple.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_tuple_struct","","Read a tuple struct value.",23,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_option","","Read an optional value.",23,[[["self"],["f"]],["result"]]],[10,"read_seq","","Read a sequence of values.",23,[[["self"],["f"]],["result"]]],[10,"read_seq_elt","","Read an element in the sequence.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_map","","Read an associative container (map).",23,[[["self"],["f"]],["result"]]],[10,"read_map_elt_key","","Read the key for an entry in a map.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_map_elt_val","","Read the value for an entry in a map.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"error","","Record a decoding error.",23,[[["str"],["self"]]]],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",24,null],[10,"emit_nil","","Emit a nil value.",24,[[["self"]],["result"]]],[10,"emit_usize","","Emit a usize value.",24,[[["self"],["usize"]],["result"]]],[10,"emit_u64","","Emit a u64 value.",24,[[["self"],["u64"]],["result"]]],[10,"emit_u32","","Emit a u32 value.",24,[[["self"],["u32"]],["result"]]],[10,"emit_u16","","Emit a u16 value.",24,[[["u16"],["self"]],["result"]]],[10,"emit_u8","","Emit a u8 value.",24,[[["self"],["u8"]],["result"]]],[10,"emit_isize","","Emit a isize value.",24,[[["isize"],["self"]],["result"]]],[10,"emit_i64","","Emit a i64 value.",24,[[["i64"],["self"]],["result"]]],[10,"emit_i32","","Emit a i32 value.",24,[[["self"],["i32"]],["result"]]],[10,"emit_i16","","Emit a i16 value.",24,[[["self"],["i16"]],["result"]]],[10,"emit_i8","","Emit a i8 value.",24,[[["self"],["i8"]],["result"]]],[10,"emit_bool","","Emit a bool value.",24,[[["self"],["bool"]],["result"]]],[10,"emit_f64","","Emit a f64 value.",24,[[["self"],["f64"]],["result"]]],[10,"emit_f32","","Emit a f32 value.",24,[[["f32"],["self"]],["result"]]],[10,"emit_char","","Emit a char value.",24,[[["self"],["char"]],["result"]]],[10,"emit_str","","Emit a string value.",24,[[["str"],["self"]],["result"]]],[10,"emit_enum","","Emit an enumeration value.",24,[[["str"],["self"],["f"]],["result"]]],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",24,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",24,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",24,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"emit_struct","","Emit a struct value.",24,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"emit_struct_field","","Emit a field item for a struct.",24,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"emit_tuple","","Emit a tuple value.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_tuple_arg","","Emit a data item for a tuple.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_tuple_struct","","Emit a tuple struct value.",24,[[["str"],["usize"],["self"],["f"]],["result"]]],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_option","","Emit an optional value.",24,[[["self"],["f"]],["result"]]],[10,"emit_option_none","","Emit the `None` optional value.",24,[[["self"]],["result"]]],[10,"emit_option_some","","Emit the `Some(x)` optional value.",24,[[["self"],["f"]],["result"]]],[10,"emit_seq","","Emit a sequence of values.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_seq_elt","","Emit an element in a sequence.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map","","Emit an associative container (map).",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",24,[[["self"],["usize"],["f"]],["result"]]],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",25,[[["d"]],["result"]]],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",26,[[["s"],["self"]],["result"]]],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",27,[[["self"],["f"]],[["result",["vec"]],["vec"]]]],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",28,[[["self"],["f"]],["result"]]],[11,"from","rustc_serialize::base64","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rustc_serialize::hex","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rustc_serialize::json","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"emit_nil","","",17,[[["self"]],["encoderesult"]]],[11,"emit_usize","","",17,[[["self"],["usize"]],["encoderesult"]]],[11,"emit_u64","","",17,[[["self"],["u64"]],["encoderesult"]]],[11,"emit_u32","","",17,[[["self"],["u32"]],["encoderesult"]]],[11,"emit_u16","","",17,[[["u16"],["self"]],["encoderesult"]]],[11,"emit_u8","","",17,[[["self"],["u8"]],["encoderesult"]]],[11,"emit_isize","","",17,[[["isize"],["self"]],["encoderesult"]]],[11,"emit_i64","","",17,[[["i64"],["self"]],["encoderesult"]]],[11,"emit_i32","","",17,[[["self"],["i32"]],["encoderesult"]]],[11,"emit_i16","","",17,[[["self"],["i16"]],["encoderesult"]]],[11,"emit_i8","","",17,[[["self"],["i8"]],["encoderesult"]]],[11,"emit_bool","","",17,[[["self"],["bool"]],["encoderesult"]]],[11,"emit_f64","","",17,[[["self"],["f64"]],["encoderesult"]]],[11,"emit_f32","","",17,[[["f32"],["self"]],["encoderesult"]]],[11,"emit_char","","",17,[[["self"],["char"]],["encoderesult"]]],[11,"emit_str","","",17,[[["str"],["self"]],["encoderesult"]]],[11,"emit_enum","","",17,[[["str"],["self"],["f"]],["encoderesult"]]],[11,"emit_enum_variant","","",17,[[["str"],["usize"],["self"],["f"]],["encoderesult"]]],[11,"emit_enum_variant_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_enum_struct_variant","","",17,[[["str"],["usize"],["self"],["f"]],["encoderesult"]]],[11,"emit_enum_struct_variant_field","","",17,[[["str"],["usize"],["self"],["f"]],["encoderesult"]]],[11,"emit_struct","","",17,[[["str"],["usize"],["self"],["f"]],["encoderesult"]]],[11,"emit_struct_field","","",17,[[["str"],["usize"],["self"],["f"]],["encoderesult"]]],[11,"emit_tuple","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple_struct","","",17,[[["str"],["usize"],["self"],["f"]],["encoderesult"]]],[11,"emit_tuple_struct_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_option","","",17,[[["self"],["f"]],["encoderesult"]]],[11,"emit_option_none","","",17,[[["self"]],["encoderesult"]]],[11,"emit_option_some","","",17,[[["self"],["f"]],["encoderesult"]]],[11,"emit_seq","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_seq_elt","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map_elt_key","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map_elt_val","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"read_nil","","",21,[[["self"]],["decoderesult"]]],[11,"read_usize","","",21,[[["self"]],[["decoderesult",["usize"]],["usize"]]]],[11,"read_u8","","",21,[[["self"]],[["decoderesult",["u8"]],["u8"]]]],[11,"read_u16","","",21,[[["self"]],[["u16"],["decoderesult",["u16"]]]]],[11,"read_u32","","",21,[[["self"]],[["decoderesult",["u32"]],["u32"]]]],[11,"read_u64","","",21,[[["self"]],[["u64"],["decoderesult",["u64"]]]]],[11,"read_isize","","",21,[[["self"]],[["isize"],["decoderesult",["isize"]]]]],[11,"read_i8","","",21,[[["self"]],[["decoderesult",["i8"]],["i8"]]]],[11,"read_i16","","",21,[[["self"]],[["decoderesult",["i16"]],["i16"]]]],[11,"read_i32","","",21,[[["self"]],[["decoderesult",["i32"]],["i32"]]]],[11,"read_i64","","",21,[[["self"]],[["i64"],["decoderesult",["i64"]]]]],[11,"read_f32","","",21,[[["self"]],[["decoderesult",["f32"]],["f32"]]]],[11,"read_f64","","",21,[[["self"]],[["decoderesult",["f64"]],["f64"]]]],[11,"read_bool","","",21,[[["self"]],[["bool"],["decoderesult",["bool"]]]]],[11,"read_char","","",21,[[["self"]],[["decoderesult",["char"]],["char"]]]],[11,"read_str","","",21,[[["self"]],[["string"],["decoderesult",["string"]]]]],[11,"read_enum","","",21,[[["str"],["self"],["f"]],["decoderesult"]]],[11,"read_enum_variant","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_enum_variant_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_enum_struct_variant","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_enum_struct_variant_field","","",21,[[["str"],["usize"],["self"],["f"]],["decoderesult"]]],[11,"read_struct","","",21,[[["str"],["usize"],["self"],["f"]],["decoderesult"]]],[11,"read_struct_field","","",21,[[["str"],["usize"],["self"],["f"]],["decoderesult"]]],[11,"read_tuple","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple_struct","","",21,[[["str"],["usize"],["self"],["f"]],["decoderesult"]]],[11,"read_tuple_struct_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_option","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_seq","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_seq_elt","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_map","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_map_elt_key","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_map_elt_val","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"error","","",21,[[["str"],["self"]],["decodererror"]]],[11,"encode","","",9,[[["s"],["self"]],["result"]]],[11,"to_json","","",9,[[["self"]],["json"]]],[11,"from","","",12,[[["parsererror"]],["decodererror"]]],[11,"from","","",11,[[["error"]],["parsererror"]]],[11,"from","","",13,[[["error"]],["encodererror"]]],[11,"next","","",19,[[["self"]],[["option",["jsonevent"]],["jsonevent"]]]],[11,"clone","rustc_serialize::base64","",1,[[["self"]],["characterset"]]],[11,"clone","","",2,[[["self"]],["newline"]]],[11,"clone","","",0,[[["self"]],["config"]]],[11,"clone","","",3,[[["self"]],["frombase64error"]]],[11,"clone","rustc_serialize::hex","",6,[[["self"]],["fromhexerror"]]],[11,"clone","rustc_serialize::json","",9,[[["self"]],["json"]]],[11,"clone","","",10,[[["self"]],["errorcode"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["stackelement"]]],[11,"eq","","",9,[[["json"],["self"]],["bool"]]],[11,"ne","","",9,[[["json"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["errorcode"]],["bool"]]],[11,"eq","","",11,[[["parsererror"],["self"]],["bool"]]],[11,"eq","","",12,[[["decodererror"],["self"]],["bool"]]],[11,"ne","","",12,[[["decodererror"],["self"]],["bool"]]],[11,"eq","","",13,[[["encodererror"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["jsonevent"]],["bool"]]],[11,"ne","","",14,[[["self"],["jsonevent"]],["bool"]]],[11,"eq","","",15,[[["stackelement"],["self"]],["bool"]]],[11,"ne","","",15,[[["stackelement"],["self"]],["bool"]]],[11,"partial_cmp","","",9,[[["json"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",9,[[["json"],["self"]],["bool"]]],[11,"le","","",9,[[["json"],["self"]],["bool"]]],[11,"gt","","",9,[[["json"],["self"]],["bool"]]],[11,"ge","","",9,[[["json"],["self"]],["bool"]]],[11,"fmt","rustc_serialize::base64","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::hex","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::json","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustc_serialize::base64","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::hex","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::json","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",22,[[["self"],["formatter"]],["result"]]],[11,"index","","",9,[[["str"],["self"]],["json"]]],[11,"index","","",9,[[["self"],["usize"]],["json"]]],[11,"from_str","","",9,[[["str"]],[["json"],["parsererror"],["result",["json","parsererror"]]]]],[11,"description","rustc_serialize::base64","",3,[[["self"]],["str"]]],[11,"description","rustc_serialize::hex","",6,[[["self"]],["str"]]],[11,"description","rustc_serialize::json","",12,[[["self"]],["str"]]],[11,"cause","","",12,[[["self"]],[["stderror"],["option",["stderror"]]]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"description","","",13,[[["self"]],["str"]]]],"p":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"],[3,"PrettyJson"],[3,"AsJson"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);